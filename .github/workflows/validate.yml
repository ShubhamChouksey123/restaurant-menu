name: Validate Files

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  validate-structure:
    name: Validate Project Structure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check required files exist
        run: |
          echo "Checking project structure..."

          required_files=(
            "index.html"
            "static/css/styles.css"
            "static/js/script.js"
            ".gitignore"
          )

          required_dirs=(
            "static/images/dishes"
            "static/css"
            "static/js"
          )

          missing=0

          for file in "${required_files[@]}"; do
            if [ -f "$file" ]; then
              echo "‚úÖ Found: $file"
            else
              echo "‚ùå Missing: $file"
              ((missing++))
            fi
          done

          for dir in "${required_dirs[@]}"; do
            if [ -d "$dir" ]; then
              echo "‚úÖ Found: $dir/"
            else
              echo "‚ùå Missing: $dir/"
              ((missing++))
            fi
          done

          if [ $missing -gt 0 ]; then
            echo "‚ùå $missing required files/directories missing"
            exit 1
          else
            echo "‚úÖ All required files and directories present"
          fi

  validate-images:
    name: Validate Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Count dish images
        run: |
          echo "Checking dish images..."

          if [ ! -d "static/images/dishes" ]; then
            echo "‚ùå static/images/dishes directory not found"
            exit 1
          fi

          # Count images
          jpg_count=$(find static/images/dishes -name "*.jpg" 2>/dev/null | wc -l)
          jpeg_count=$(find static/images/dishes -name "*.jpeg" 2>/dev/null | wc -l)
          png_count=$(find static/images/dishes -name "*.png" 2>/dev/null | wc -l)
          total=$((jpg_count + jpeg_count + png_count))

          echo "Found $total images:"
          echo "  - JPG: $jpg_count"
          echo "  - JPEG: $jpeg_count"
          echo "  - PNG: $png_count"

          if [ $total -lt 100 ]; then
            echo "‚ö†Ô∏è  Warning: Expected at least 100 images, found $total"
          else
            echo "‚úÖ Sufficient images found!"
          fi

      - name: Check image file sizes
        run: |
          echo "Checking image file sizes..."
          large_count=0
          total_size=0

          for img in static/images/dishes/*.jpg static/images/dishes/*.jpeg static/images/dishes/*.png; do
            [ -e "$img" ] || continue
            size=$(stat -c%s "$img" 2>/dev/null || echo "0")
            total_size=$((total_size + size))
            size_kb=$((size / 1024))

            if [ $size -gt 524288 ]; then  # 512KB
              echo "‚ö†Ô∏è  Large file: $(basename $img) (${size_kb}KB)"
              ((large_count++))
            fi
          done

          total_mb=$((total_size / 1024 / 1024))
          echo "Total images size: ${total_mb}MB"

          if [ $large_count -gt 0 ]; then
            echo "‚ö†Ô∏è  Found $large_count large images (>512KB)"
            echo "Consider optimizing images for better performance"
          fi

  check-links:
    name: Check Internal Links
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check CSS and JS references
        run: |
          echo "Checking resource links..."
          missing=0

          # Check CSS files
          if grep -q 'href="static/css/styles.css"' index.html; then
            if [ -f "static/css/styles.css" ]; then
              echo "‚úÖ styles.css found"
            else
              echo "‚ùå styles.css referenced but not found"
              ((missing++))
            fi
          fi

          # Check JS files
          if grep -q 'src="static/js/script.js"' index.html; then
            if [ -f "static/js/script.js" ]; then
              echo "‚úÖ script.js found"
            else
              echo "‚ùå script.js referenced but not found"
              ((missing++))
            fi
          fi

          if [ $missing -gt 0 ]; then
            echo "‚ùå $missing referenced files not found"
            exit 1
          else
            echo "‚úÖ All referenced files exist"
          fi

  validate-html:
    name: Basic HTML Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check HTML structure
        run: |
          echo "Checking HTML structure..."

          if [ ! -f "index.html" ]; then
            echo "‚ùå index.html not found"
            exit 1
          fi

          # Basic checks
          if grep -q '<html' index.html && grep -q '</html>' index.html; then
            echo "‚úÖ HTML tags present"
          else
            echo "‚ùå Missing HTML tags"
            exit 1
          fi

          if grep -q '<head>' index.html && grep -q '</head>' index.html; then
            echo "‚úÖ Head section present"
          else
            echo "‚ùå Missing head section"
            exit 1
          fi

          if grep -q '<body>' index.html && grep -q '</body>' index.html; then
            echo "‚úÖ Body section present"
          else
            echo "‚ùå Missing body section"
            exit 1
          fi

          if grep -q '<title>' index.html; then
            echo "‚úÖ Title present"
          else
            echo "‚ö†Ô∏è  Warning: No title tag found"
          fi

          echo "‚úÖ Basic HTML structure validated"

  summary:
    name: Validation Summary
    runs-on: ubuntu-latest
    needs: [validate-structure, validate-images, check-links, validate-html]
    if: always()

    steps:
      - name: Check results
        run: |
          echo "üéâ Validation checks completed!"
          echo "Check individual job results for details."
