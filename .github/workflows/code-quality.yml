name: Code Quality

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  file-size-check:
    name: Check File Sizes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check HTML file sizes
        run: |
          echo "Checking HTML file sizes..."
          for file in *.html; do
            [ -e "$file" ] || continue
            size=$(stat -c%s "$file" 2>/dev/null || echo "0")
            size_kb=$((size / 1024))
            if [ $size_kb -gt 100 ]; then
              echo "‚ö†Ô∏è  Large HTML file: $file (${size_kb}KB)"
            else
              echo "‚úÖ $file (${size_kb}KB)"
            fi
          done

      - name: Check CSS file sizes
        run: |
          echo "Checking CSS file sizes..."
          for file in static/css/*.css; do
            [ -e "$file" ] || continue
            size=$(stat -c%s "$file" 2>/dev/null || echo "0")
            size_kb=$((size / 1024))
            if [ $size_kb -gt 50 ]; then
              echo "‚ö†Ô∏è  Large CSS file: $file (${size_kb}KB)"
            else
              echo "‚úÖ $file (${size_kb}KB)"
            fi
          done

      - name: Check JS file sizes
        run: |
          echo "Checking JS file sizes..."
          for file in static/js/*.js; do
            [ -e "$file" ] || continue
            size=$(stat -c%s "$file" 2>/dev/null || echo "0")
            size_kb=$((size / 1024))
            if [ $size_kb -gt 50 ]; then
              echo "‚ö†Ô∏è  Large JS file: $file (${size_kb}KB)"
            else
              echo "‚úÖ $file (${size_kb}KB)"
            fi
          done

  accessibility-check:
    name: Check Accessibility
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for alt text on images
        run: |
          echo "Checking for image accessibility..."

          if [ ! -f "index.html" ]; then
            echo "‚ùå index.html not found"
            exit 1
          fi

          # Count total img tags
          total_imgs=$(grep -o '<img' index.html | wc -l)
          echo "Found $total_imgs image tags"

          # Check for images without alt attribute (basic check)
          if grep -q '<img[^>]*>' index.html; then
            echo "‚úÖ Images found in HTML"
            echo "‚ö†Ô∏è  Manual review recommended for alt text completeness"
          fi

      - name: Check for proper heading structure
        run: |
          echo "Checking heading structure..."

          h1_count=$(grep -o '<h1' index.html | wc -l)
          h2_count=$(grep -o '<h2' index.html | wc -l)
          h3_count=$(grep -o '<h3' index.html | wc -l)

          echo "Heading structure:"
          echo "  - H1: $h1_count"
          echo "  - H2: $h2_count"
          echo "  - H3: $h3_count"

          if [ $h1_count -eq 1 ]; then
            echo "‚úÖ Proper H1 usage (single H1)"
          elif [ $h1_count -eq 0 ]; then
            echo "‚ö†Ô∏è  No H1 found - consider adding one"
          else
            echo "‚ö†Ô∏è  Multiple H1 tags found ($h1_count)"
          fi

  code-structure:
    name: Check Code Structure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for console.log in production
        run: |
          echo "Checking for debug code..."

          if [ -d "static/js" ]; then
            console_count=$(grep -r "console.log" static/js/ 2>/dev/null | wc -l)

            if [ $console_count -gt 0 ]; then
              echo "‚ö†Ô∏è  Found $console_count console.log statements"
              echo "Consider removing debug code for production"
              grep -n "console.log" static/js/*.js 2>/dev/null || true
            else
              echo "‚úÖ No console.log statements found"
            fi
          fi

      - name: Check for TODO comments
        run: |
          echo "Checking for TODO comments..."

          todo_count=$(grep -ri "TODO\|FIXME\|HACK" *.html static/ 2>/dev/null | wc -l)

          if [ $todo_count -gt 0 ]; then
            echo "üìù Found $todo_count TODO/FIXME/HACK comments:"
            grep -rni "TODO\|FIXME\|HACK" *.html static/ 2>/dev/null | head -5 || true
          else
            echo "‚úÖ No TODO comments found"
          fi

  summary:
    name: Code Quality Summary
    runs-on: ubuntu-latest
    needs: [file-size-check, accessibility-check, code-structure]
    if: always()

    steps:
      - name: Summary
        run: |
          echo "‚úÖ Code quality checks completed!"
